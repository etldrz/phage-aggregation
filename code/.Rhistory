gtwd()
getwd()
setwd("C:/Users/Evan/Desktop/repos"
)
getwd()
source('/haiku-bot/code/syllableCount.R')
source('./haiku-bot/code/syllableCount.R')
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(dict)
dict[400]
as.vector(dict)[400]
as.vector(dict[,1])[400]
source("~/.active-rstudio-document", echo=TRUE)
View(dict)
length(dict)
dict[2]
dict[3]
dict[500]
order <- sample(1:length(dict), replace=FALSE)
length(order)
order[1]
source("~/.active-rstudio-document", echo=TRUE)
'y' == 'y'
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/haiku-bot/testing/testingSyllableDetection.R", echo=TRUE)
r <- cbind(yeah=3, boo='shit')
r
source("C:/Users/Evan/Desktop/repos/haiku-bot/testing/testingSyllableDetection.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/haiku-bot/testing/testingSyllableDetection.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/haiku-bot/testing/testingSyllableDetection.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/haiku-bot/testing/testingSyllableDetection.R", echo=TRUE)
boo <- paste(fucked.up[,1], collapse=' ')
boo
boo <- paste(fucked.up[,1], collapse=', ')
boo
boo <- paste(fucked.up[,1], collapse='\', \'')
boo
length(unique(problems) == length(problems))
length(unique(problems)) == length(problems)
file.choose()
r <- read.table("C:\\Users\\Evan\\Desktop\\UWA Psychology MRC Psycholinguistic Database Search.txt")
View(r)
r
r <- read.table("C:\\Users\\Evan\\Desktop\\UWA Psychology MRC Psycholinguistic Database Search.txt", sep=" ", header=FALSE)
r <- read.table("C:\\Users\\Evan\\Desktop\\UWA Psychology MRC Psycholinguistic Database Search.txt", sep=" ", col.names=FALSE)
r <- read.table("C:\\Users\\Evan\\Desktop\\UWA Psychology MRC Psycholinguistic Database Search.txt", sep=" ", col.names=c('word', 'count'))
r <- read.table("C:\\Users\\Evan\\Desktop\\UWA Psychology MRC Psycholinguistic Database Search.txt", sep="|")
View(r)
strsplit(r[1],split=" ")
strsplit(r[1], " ")
r[1]
class(r)
r <- as.vector(r)
class(r)
r[[1]][1]
r <- r[[1]]
class(r)
r[1]
strsplit(r[1], split=" ")
e <- strsplit(r[1], split=" ")
e <- e[!e %in% " "]
e
class(e)
e <- strsplit(r[1], split=" ")[[1]]
class(e)
e <- e[!e %in% " "]
e
e <- ifelse(length(e) == 0, e)
b <- ifelse(length(e) == 0, e)
b <- e[e == ""]
b
b <- e[e != ""]
b
file.choose()
source('./haiku-bot/code/syllableCount.R')
library(dplyr)
dict.locat <- './haiku-bot/testing/UWA Psychology MRC Psycholinguistic Database Search.txt'
dict <- dict.locat %>% read.table(sep="") %>% as.character() %>% strsplit(split="")[[1]]
file.exists(dict.locat <- './haiku-bot/testing/UWA Psychology MRC Psycholinguistic Database Search.txt'
)
r <- read.table(dict.locat, sep="")
r <- read.table(dict.locat, sep="\t", fill=TRUE)
?read.table
r <- read.table(dict.locat, sep="\t")
View(r)
source('./haiku-bot/code/syllableCount.R')
library(dplyr)
dict.locat <- './haiku-bot/testing/UWA Psychology MRC Psycholinguistic Database Search.txt'
dict <- dict.locat %>% read.table(sep="\t") %>% as.character() %>% strsplit(split="")[[1]]
?strsplit
source('./haiku-bot/code/syllableCount.R')
library(dplyr)
dict.locat <- './haiku-bot/testing/UWA Psychology MRC Psycholinguistic Database Search.txt'
dict <- read.table(dict.locat, sep="\t") %>% as.character() %>% strsplit(split="")[[1]]
source('./haiku-bot/code/syllableCount.R')
library(dplyr)
dict.locat <- './haiku-bot/testing/UWA Psychology MRC Psycholinguistic Database Search.txt'
dict <- read.table(dict.locat, sep="\t") %>% as.character()
View(dict)
dict[1]
dict <- read.table(dict.locat, sep="\t")
View(dict)
class(dict)
dict <- dict %>% as.character(dict) %>% strsplit(dict, split="")
View(dict[[1]]])
View(dict[[1]])
View(dict[[1]][1])
dict[[1]][1]
dict <- strsplit(as.character(dict), sep="")
dict <- read.table(dict.locat, sep="\t")
dict <- strsplit(as.character(dict), sep="")
?strsplit
dict <- read.table(dict.locat, sep="\t")
dict <- strsplit(as.character(dict), split="")
View(dict)
View(dict[[1]])
dict <- read.table(dict.locat, sep="\t")
dict <- strsplit(as.character(dict), split=" ")[[1]]
dict <- read.table(dict.locat, sep="\t")
dict <- strsplit(as.vector(dict), split=" ")[[1]]
r <- class(dict)
r <- as.vector(dict)
class(r)
r <- as.vector(dict)[[1]]
View(r)
r[1]
dict <- read.table(dict.locat, sep="\t")
dict <- strsplit(as.vector(dict)[[1]], split=" ")[[1]]
dict <- strsplit(as.vector(dict)[[1]], split="")[[1]]
View(dict)
dict <- strsplit(as.vector(dict)[[1]], split=" ")[[1]]
View(dict)
dict <- read.table(dict.locat, sep="\t")
dict <- strsplit(as.vector(dict)[[1]], split=" ")[[1]]
View(dict)
dict.locat <- './haiku-bot/testing/UWA Psychology MRC Psycholinguistic Database Search.txt'
dict <- read.table(dict.locat, sep="\t")
dict <- strsplit(as.vector(dict)[[1]], split=" ")[[1]]
View(dict)
dict <- read.table(dict.locat, sep="\t") %>% as.vector()[[1]]
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
View(dict)
dict[1]
dict <- dict[dict != ""]
View(dict)
dict[1]
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
dict <- dict[dict != ""]
View(dict)
dict[1]
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
dict <- dict[dict != ""]
dict <- strsplit(as.vector(dict)[[1]], split="")[[1]]
dict[1]
dict <- sapply(as.vector(dict)[[1]], strsplit(split=" "))
?sapply
dict <- sapply(X=as.vector(dict)[[1]], FUN=strsplit(split=" "))
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
dict <- dict[dict != ""]
dict <- sapply(X=as.vector(dict)[[1]], FUN=strsplit(split=" "))
dict[1]
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
dict <- dict[dict != ""]
dict <- sapply(X=as.vector(dict)[[1]], FUN=strsplit(split=" "))
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
dict <- dict[dict != ""]
dict <- lapply(X=as.vector(dict)[[1]], FUN=strsplit(split=" "))
dict
View(dict)
dict[1]
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
dict <- dict[dict != ""]
dict <- read.table(dict.locat, sep="\t")
dict <- as.vector(dict)[[1]]
dict[1]
dict <- lapply(X=dict, FUN=strsplit(split=" "))
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/theta_p_changing.R", echo=TRUE)
setwd("C:/Users/Evan/Desktop/repos/phage-aggregation/code")
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/theta_p_changing.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
?file.create
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/theta_p_changing.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
boot.files.tp
curr <- boot.files.tp[3]
curr
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
title(paste("alpha:", alpha, "theta:", theta, "p:", p, "omega:", omega, "lambda:", lambda, sep=" "))
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
source("C:/Users/Evan/Desktop/repos/phage-aggregation/code/2_by_3_base.R", echo=TRUE)
